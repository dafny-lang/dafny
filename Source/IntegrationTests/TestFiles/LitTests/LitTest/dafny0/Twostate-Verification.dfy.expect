Twostate-Verification.dfy(656,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(657,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(658,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(659,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(661,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(662,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(663,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(665,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(666,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(667,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(668,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(670,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(671,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(672,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(673,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(675,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(676,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(677,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(679,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(680,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(681,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(682,22): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(33,13): Warning: Argument to 'old' does not dereference the mutable heap, so this use of 'old' has no effect
Twostate-Verification.dfy(313,38): Error: assertion might not hold
Twostate-Verification.dfy(337,23): Error: a precondition for this call could not be proved
Twostate-Verification.dfy(317,29): Related location: this is the precondition that could not be proved
Twostate-Verification.dfy(359,6): Error: assertion might not hold
Twostate-Verification.dfy(361,6): Error: assertion might not hold
Twostate-Verification.dfy(384,17): Error: receiver argument could not be proved to be allocated in the two-state function's previous state
Twostate-Verification.dfy(386,17): Error: receiver argument could not be proved to be allocated in the two-state function's previous state
Twostate-Verification.dfy(391,26): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(393,28): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(398,19): Error: receiver argument could not be proved to be allocated in the two-state function's previous state
Twostate-Verification.dfy(412,8): Error: receiver argument could not be proved to be allocated in the two-state lemma's previous state
Twostate-Verification.dfy(414,8): Error: receiver argument could not be proved to be allocated in the two-state lemma's previous state
Twostate-Verification.dfy(420,27): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(422,29): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(447,28): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(451,30): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(466,29): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(470,31): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(558,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(561,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(564,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(567,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(579,11): Error: receiver argument could not be proved to be allocated in the two-state function's previous state
Twostate-Verification.dfy(582,11): Error: receiver argument could not be proved to be allocated in the two-state lemma's previous state
Twostate-Verification.dfy(593,19): Error: argument at index 1 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(596,19): Error: argument at index 1 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(599,19): Error: argument at index 1 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(602,19): Error: argument at index 1 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(613,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(616,22): Error: argument at index 2 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(619,26): Error: argument at index 3 for parameter 'c' could not be proved to be allocated in the two-state function's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(622,26): Error: argument at index 3 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: Cell', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(635,25): Error: receiver argument could not be proved to be allocated in the two-state function's previous state
Twostate-Verification.dfy(659,29): Error: receiver could not be proved to be allocated in the state in which its fields are accessed
Twostate-Verification.dfy(271,13): Error: a postcondition could not be proved on this return path
Twostate-Verification.dfy(263,24): Related location: this is the postcondition that could not be proved
Twostate-Verification.dfy(277,4): Error: a postcondition could not be proved on this return path
Twostate-Verification.dfy(276,26): Related location: this is the postcondition that could not be proved
Twostate-Verification.dfy(6,4): Error: argument at index 0 for parameter 'c' could not be proved to be allocated in the two-state lemma's previous state -- if you add 'new' before the parameter declaration, like 'new c: A', arguments can refer to expressions possibly unallocated in the previous state
Twostate-Verification.dfy(12,17): Error: receiver could not be proved to be allocated in the state in which its fields are accessed
Twostate-Verification.dfy(37,26): Error: receiver could not be proved to be allocated in the state in which its fields are accessed
Twostate-Verification.dfy(41,32): Error: receiver argument could not be proved to be allocated in the state in which the function is invoked
Twostate-Verification.dfy(56,26): Error: receiver could not be proved to be allocated in the state in which its fields are accessed
Twostate-Verification.dfy(58,32): Error: receiver argument could not be proved to be allocated in the state in which the function is invoked
Twostate-Verification.dfy(74,4): Error: assertion might not hold

Dafny program verifier finished with 66 verified, 42 errors
